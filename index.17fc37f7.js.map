{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar thList = document.querySelectorAll(\"th\");\nvar tbody = table.querySelector(\"tbody\");\nvar convertSalary = function(value) {\n    return \"$\".concat(Number(value).toLocaleString(\"en-US\"));\n};\nthList.forEach(function(th) {\n    th.dataset.name = th.innerHTML.toLowerCase();\n});\nvar sortColum = \"\";\ntable.querySelector(\"thead\").addEventListener(\"click\", function(e) {\n    if (e.target.tagName !== \"TH\") return;\n    var th = e.target;\n    var thIndex = th.cellIndex;\n    var thName = th.dataset.name;\n    if (sortColum === thName) {\n        sortColum = \"\";\n        sortTable(thIndex, thName, \"desc\");\n    } else {\n        sortColum = thName;\n        sortTable(thIndex, thName, \"asc\");\n    }\n});\ntbody.addEventListener(\"click\", function(e) {\n    var selected = e.target.closest(\"tr\");\n    var prevSelected = tbody.querySelector(\".active\");\n    if (!prevSelected) selected.classList.add(\"active\");\n    else {\n        prevSelected.classList.remove(\"active\");\n        selected.classList.add(\"active\");\n    }\n});\nfunction sortTable(colNum, type) {\n    var sort = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"asc\";\n    var _tbody;\n    var rowsArray = Array.from(tbody.rows);\n    switch(type){\n        case \"name\":\n        case \"position\":\n        case \"office\":\n            sort === \"asc\" ? rowsArray.sort(function(a, b) {\n                return a.cells[colNum].innerHTML.localeCompare(b.cells[colNum].innerHTML);\n            }) : rowsArray.sort(function(a, b) {\n                return b.cells[colNum].innerHTML.localeCompare(a.cells[colNum].innerHTML);\n            });\n            break;\n        case \"age\":\n            sort === \"asc\" ? rowsArray.sort(function(a, b) {\n                return Number(a.cells[colNum].innerHTML) - Number(b.cells[colNum].innerHTML);\n            }) : rowsArray.sort(function(a, b) {\n                return Number(b.cells[colNum].innerHTML) - Number(a.cells[colNum].innerHTML);\n            });\n            break;\n        case \"salary\":\n            sort === \"asc\" ? rowsArray.sort(function(a, b) {\n                return getNumber(a.cells[colNum].innerHTML) - getNumber(b.cells[colNum].innerHTML);\n            }) : rowsArray.sort(function(a, b) {\n                return getNumber(b.cells[colNum].innerHTML) - getNumber(a.cells[colNum].innerHTML);\n            });\n            break;\n    }\n    (_tbody = tbody).append.apply(_tbody, _to_consumable_array(rowsArray));\n}\nfunction getNumber(value) {\n    return Number(value.slice(1).split(\",\").join(\"\"));\n}\nvar form = document.createElement(\"form\");\nvar inputForm = '\\n  <label>\\n    Name:\\n    <input\\n      data-qa=\"name\"\\n      name=\"name\"\\n      type=\"text\"\\n      required\\n    >\\n  </label>\\n\\n  <label>\\n    Position:\\n    <input\\n      data-qa=\"position\"\\n      name=\"position\"\\n      type=\"text\"\\n      required\\n    >\\n  </label>\\n\\n  <label>\\n    Office:\\n    <select data-qa=\"office\" name=\"office\">\\n      <option value=\"Tokyo\">\\n        Tokyo\\n      </option>\\n\\n      <option value=\"Singapore\">\\n        Singapore\\n      </option>\\n\\n      <option value=\"London\">\\n        London\\n      </option>\\n\\n      <option value=\"New York\">\\n        New York\\n      </option>\\n\\n      <option value=\"Edinburgh\">\\n        Edinburgh\\n      </option>\\n\\n      <option value=\"San Francisco\">\\n        San Francisco\\n      </option>\\n    </select>\\n  </label>\\n\\n  <label>\\n    Age:\\n    <input\\n      data-qa=\"age\"\\n      name=\"age\"\\n      type=\"number\"\\n      min=\"18\"\\n      max=\"90\"\\n      required\\n    >\\n  </label>\\n\\n  <label>\\n    Salary:\\n    <input\\n      data-qa=\"salary\"\\n      name=\"salary\"\\n      type=\"number\"\\n      min=\"0\"\\n      required\\n    >\\n  </label>\\n\\n  <button type=\"submit\">Save to table</button>\\n';\nform.className = \"new-employee-form\";\nform.name = \"employee\";\nform.action = \"/\";\nform.method = \"post\";\nform.insertAdjacentHTML(\"afterbegin\", inputForm);\ntable.after(form);\nvar pushNotification = function(description, type) {\n    var notification = document.createElement(\"div\");\n    var heading = document.createElement(\"h2\");\n    var text = document.createElement(\"p\");\n    notification.className = \"notification \".concat(type);\n    notification.dataset.qa = \"notification\";\n    notification.style.cssText = \"\\n    top: 10px;\\n    right: 10px;\\n  \";\n    heading.textContent = type;\n    heading.className = \"title\";\n    text.textContent = description;\n    notification.append(heading, text);\n    document.body.append(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 2000);\n};\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var nameEmployee = form.elements.name.value;\n    var position = form.elements.position.value;\n    var office = form.elements.office.value;\n    var age = form.elements.age.value;\n    var salary = form.elements.salary.value;\n    var isValidName = nameEmployee.replace(/\\s/g, \"\").length >= 4;\n    var isValidPosition = position.replace(/\\s/g, \"\").length >= 4;\n    var isValidAge = age >= 18 && age <= 90;\n    if (isValidName && isValidPosition && isValidAge && salary && age) {\n        var newEmployee = \"\\n      <tr>\\n        <td>\".concat(nameEmployee, \"</td>\\n        <td>\").concat(position, \"</td>\\n        <td>\").concat(office, \"</td>\\n        <td>\").concat(age, \"</td>\\n        <td>\").concat(convertSalary(salary), \"</td>\\n      </tr>\\n    \");\n        tbody.insertAdjacentHTML(\"beforeend\", newEmployee);\n        pushNotification(\"Your changes has been saved\", \"success\");\n        form.reset();\n    } else if (!isValidAge && !isValidName && !isValidPosition) pushNotification(\"Age must be between 18 and 90.\\n         Name and position must at least than 4 letters\", \"error\");\n    else {\n        if (!isValidAge) pushNotification(\"Age must be between 18 and 90\", \"error\");\n        if (!isValidName || !isValidPosition) pushNotification(\"Name and position must at least than 4 letters\", \"error\");\n    }\n});\n\n//# sourceMappingURL=index.17fc37f7.js.map\n","/* eslint-disable */\n'use strict';\n\nconst table = document.querySelector('table');\nconst thList = document.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\nconst convertSalary = (value) => {\n  return `$${Number(value).toLocaleString('en-US')}`;\n};\n\nthList.forEach((th) => {\n  th.dataset.name = th.innerHTML.toLowerCase();\n});\n\nlet sortColum = '';\n\ntable.querySelector('thead').addEventListener('click', (e) => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const th = e.target;\n  const thIndex = th.cellIndex;\n  const thName = th.dataset.name;\n\n  if (sortColum === thName) {\n    sortColum = '';\n    sortTable(thIndex, thName, 'desc');\n  } else {\n    sortColum = thName;\n    sortTable(thIndex, thName, 'asc');\n  }\n});\n\ntbody.addEventListener('click', (e) => {\n  const selected = e.target.closest('tr');\n  const prevSelected = tbody.querySelector('.active');\n\n  if (!prevSelected) {\n    selected.classList.add('active');\n  } else {\n    prevSelected.classList.remove('active');\n    selected.classList.add('active');\n  }\n});\n\nfunction sortTable(colNum, type, sort = 'asc') {\n  const rowsArray = Array.from(tbody.rows);\n\n  switch (type) {\n    case 'name':\n    case 'position':\n    case 'office':\n      sort === 'asc'\n        ? rowsArray.sort((a, b) => {\n          return a.cells[colNum].innerHTML.localeCompare(\n            b.cells[colNum].innerHTML,\n          );\n        })\n        : rowsArray.sort((a, b) => {\n          return b.cells[colNum].innerHTML.localeCompare(\n            a.cells[colNum].innerHTML,\n          );\n        });\n      break;\n\n    case 'age':\n      sort === 'asc'\n        ? rowsArray.sort(\n          (a, b) =>\n            Number(a.cells[colNum].innerHTML) -\n              Number(b.cells[colNum].innerHTML),\n        )\n        : rowsArray.sort(\n          (a, b) =>\n            Number(b.cells[colNum].innerHTML) -\n              Number(a.cells[colNum].innerHTML),\n        );\n      break;\n\n    case 'salary':\n      sort === 'asc'\n        ? rowsArray.sort(\n          (a, b) =>\n            getNumber(a.cells[colNum].innerHTML) -\n              getNumber(b.cells[colNum].innerHTML),\n        )\n        : rowsArray.sort(\n          (a, b) =>\n            getNumber(b.cells[colNum].innerHTML) -\n              getNumber(a.cells[colNum].innerHTML),\n        );\n      break;\n  }\n\n  tbody.append(...rowsArray);\n}\n\nfunction getNumber(value) {\n  return Number(value.slice(1).split(',').join(''));\n}\n\nconst form = document.createElement('form');\n\nconst inputForm = `\n  <label>\n    Name:\n    <input\n      data-qa=\"name\"\n      name=\"name\"\n      type=\"text\"\n      required\n    >\n  </label>\n\n  <label>\n    Position:\n    <input\n      data-qa=\"position\"\n      name=\"position\"\n      type=\"text\"\n      required\n    >\n  </label>\n\n  <label>\n    Office:\n    <select data-qa=\"office\" name=\"office\">\n      <option value=\"Tokyo\">\n        Tokyo\n      </option>\n\n      <option value=\"Singapore\">\n        Singapore\n      </option>\n\n      <option value=\"London\">\n        London\n      </option>\n\n      <option value=\"New York\">\n        New York\n      </option>\n\n      <option value=\"Edinburgh\">\n        Edinburgh\n      </option>\n\n      <option value=\"San Francisco\">\n        San Francisco\n      </option>\n    </select>\n  </label>\n\n  <label>\n    Age:\n    <input\n      data-qa=\"age\"\n      name=\"age\"\n      type=\"number\"\n      min=\"18\"\n      max=\"90\"\n      required\n    >\n  </label>\n\n  <label>\n    Salary:\n    <input\n      data-qa=\"salary\"\n      name=\"salary\"\n      type=\"number\"\n      min=\"0\"\n      required\n    >\n  </label>\n\n  <button type=\"submit\">Save to table</button>\n`;\n\nform.className = 'new-employee-form';\nform.name = 'employee';\nform.action = '/';\nform.method = 'post';\n\nform.insertAdjacentHTML('afterbegin', inputForm);\ntable.after(form);\n\nconst pushNotification = (description, type) => {\n  const notification = document.createElement('div');\n  const heading = document.createElement('h2');\n  const text = document.createElement('p');\n\n  notification.className = `notification ${type}`;\n  notification.dataset.qa = 'notification';\n\n  notification.style.cssText = `\n    top: 10px;\n    right: 10px;\n  `;\n\n  heading.textContent = type;\n  heading.className = 'title';\n\n  text.textContent = description;\n\n  notification.append(heading, text);\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const nameEmployee = form.elements.name.value;\n  const position = form.elements.position.value;\n  const office = form.elements.office.value;\n  const age = form.elements.age.value;\n  const salary = form.elements.salary.value;\n\n  const isValidName = nameEmployee.replace(/\\s/g, '').length >= 4;\n  const isValidPosition = position.replace(/\\s/g, '').length >= 4;\n  const isValidAge = age >= 18 && age <= 90;\n\n  if (isValidName && isValidPosition && isValidAge && salary && age) {\n    const newEmployee = `\n      <tr>\n        <td>${nameEmployee}</td>\n        <td>${position}</td>\n        <td>${office}</td>\n        <td>${age}</td>\n        <td>${convertSalary(salary)}</td>\n      </tr>\n    `;\n\n    tbody.insertAdjacentHTML('beforeend', newEmployee);\n    pushNotification('Your changes has been saved', 'success');\n    form.reset();\n  } else {\n    if (!isValidAge && !isValidName && !isValidPosition) {\n      pushNotification(\n        `Age must be between 18 and 90.\n         Name and position must at least than 4 letters`,\n        'error',\n      );\n    } else {\n      if (!isValidAge) {\n        pushNotification('Age must be between 18 and 90', 'error');\n      }\n\n      if (!isValidName || !isValidPosition) {\n        pushNotification(\n          'Name and position must at least than 4 letters',\n          'error',\n        );\n      }\n    }\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","thList","querySelectorAll","tbody","forEach","th","dataset","name","innerHTML","toLowerCase","sortColum","sortTable","colNum","type","sort","arguments","rowsArray","from","rows","a","b","cells","localeCompare","Number","getNumber","append","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","test","_non_iterable_spread","TypeError","value","split","join","addEventListener","e","target","tagName","thIndex","cellIndex","thName","selected","closest","prevSelected","classList","remove","add","form","createElement","className","action","method","insertAdjacentHTML","after","pushNotification","description","notification","heading","text","concat","qa","style","cssText","textContent","body","setTimeout","preventDefault","nameEmployee","elements","position","office","age","salary","isValidName","replace","isValidPosition","isValidAge","newEmployee","toLocaleString","reset"],"version":3,"file":"index.17fc37f7.js.map"}